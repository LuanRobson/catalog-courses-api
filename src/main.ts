import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Log das vari√°veis de ambiente (apenas em desenvolvimento)
  if (process.env.NODE_ENV !== 'production') {
    console.log('üîç Vari√°veis de ambiente:');
    console.log('DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
    console.log('DIRECT_URL:', process.env.DIRECT_URL ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
    console.log('JWT_SECRET:', process.env.JWT_SECRET ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
    console.log('NODE_ENV:', process.env.NODE_ENV || 'development');
  }

  // Configura√ß√£o do CORS
  app.enableCors({
    origin: process.env.CORS_ORIGIN || 'http://localhost:4200',
    credentials: true,
  });

  // Configura√ß√£o global de valida√ß√£o
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
    }),
  );

  // Configura√ß√£o do Swagger
  const config = new DocumentBuilder()
    .setTitle('Cat√°logo de Cursos API')
    .setDescription('API REST para gerenciamento de cursos')
    .setVersion('1.0')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document);

  // Prefixo global da API
  app.setGlobalPrefix('api/v1');

  const port = process.env.PORT || 3000;
  await app.listen(port);
  
  console.log(`üöÄ Aplica√ß√£o rodando na porta ${port}`);
  console.log(`üìö Documenta√ß√£o dispon√≠vel em: http://localhost:${port}/api/docs`);
}

bootstrap(); 